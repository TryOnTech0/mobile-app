import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "NetworkManager.h"
        name: "NetworkManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ARClothTryOn/NetworkManager 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "isConnected"
            type: "bool"
            read: "isConnected"
            notify: "connectionStatusChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "serverUrl"
            type: "QString"
            read: "serverUrl"
            write: "setServerUrl"
            notify: "serverUrlChanged"
            index: 1
        }
        Signal {
            name: "connectionStatusChanged"
            Parameter { name: "connected"; type: "bool" }
        }
        Signal { name: "serverUrlChanged" }
        Signal {
            name: "databaseConnected"
            Parameter { name: "dbName"; type: "QString" }
        }
        Signal { name: "databaseDisconnected" }
        Signal {
            name: "connectionError"
            Parameter { name: "error"; type: "QString" }
        }
        Signal {
            name: "garmentsReceived"
            Parameter { name: "garments"; type: "QJsonArray" }
        }
        Signal {
            name: "garmentDetailsReceived"
            Parameter { name: "garmentId"; type: "QString" }
            Parameter { name: "details"; type: "QJsonObject" }
        }
        Signal {
            name: "garmentUploadSucceeded"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Signal {
            name: "garmentUploadFailed"
            Parameter { name: "errorMessage"; type: "QString" }
        }
        Signal {
            name: "garmentUpdateSucceeded"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Signal {
            name: "garmentDeleteSucceeded"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Signal {
            name: "scanUploaded"
            Parameter { name: "imageId"; type: "QString" }
            Parameter { name: "imageUrl"; type: "QString" }
        }
        Signal {
            name: "scanProgressChanged"
            Parameter { name: "progress"; type: "int" }
        }
        Signal {
            name: "processedModelReady"
            Parameter { name: "modelUrl"; type: "QString" }
            Parameter { name: "previewUrl"; type: "QString" }
            Parameter { name: "modelKey"; type: "QString" }
            Parameter { name: "previewKey"; type: "QString" }
        }
        Signal {
            name: "userLoggedIn"
            Parameter { name: "username"; type: "QString" }
            Parameter { name: "userId"; type: "QString" }
        }
        Signal { name: "userLoggedOut" }
        Signal {
            name: "registrationSucceeded"
            Parameter { name: "username"; type: "QString" }
        }
        Signal {
            name: "authenticationFailed"
            Parameter { name: "reason"; type: "QString" }
        }
        Signal {
            name: "registrationFailed"
            Parameter { name: "reason"; type: "QString" }
        }
        Signal { name: "networkRequestStarted" }
        Signal { name: "networkRequestFinished" }
        Signal {
            name: "networkError"
            Parameter { name: "errorMessage"; type: "QString" }
        }
        Method {
            name: "onAuthenticationRequired"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
            Parameter { name: "authenticator"; type: "QAuthenticator"; isPointer: true }
        }
        Method {
            name: "handleGarmentsResponse"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
        }
        Method {
            name: "handleAuthResponse"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
            Parameter { name: "isRegistration"; type: "bool" }
        }
        Method {
            name: "processNetworkError"
            Parameter { name: "error"; type: "QNetworkReply::NetworkError" }
        }
        Method {
            name: "handleUploadFinished"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
        }
        Method { name: "fetchUserData" }
        Method { name: "isConnected"; type: "bool"; isMethodConstant: true }
        Method { name: "verifyAuthToken" }
        Method { name: "verifyServerConnectivity" }
        Method {
            name: "onSslErrors"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
            Parameter { name: "errors"; type: "QSslError"; isList: true }
        }
        Method {
            name: "fetchGarments"
            Parameter { name: "forceRefresh"; type: "bool" }
        }
        Method { name: "fetchGarments"; isCloned: true }
        Method {
            name: "uploadGarment"
            Parameter { name: "garmentData"; type: "QJsonObject" }
        }
        Method {
            name: "deleteGarment"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Method {
            name: "uploadScan"
            Parameter { name: "imageData"; type: "QByteArray" }
            Parameter { name: "category"; type: "QString" }
            Parameter { name: "garmentId"; type: "QString" }
        }
        Method {
            name: "getProcessedModel"
            Parameter { name: "imageId"; type: "QString" }
        }
        Method {
            name: "registerUser"
            Parameter { name: "username"; type: "QString" }
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "password"; type: "QString" }
        }
        Method {
            name: "loginUser"
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "password"; type: "QString" }
        }
        Method { name: "logoutUser" }
        Method { name: "isUserLoggedIn"; type: "bool"; isMethodConstant: true }
        Method { name: "syncUserData" }
        Method { name: "checkServerStatus" }
    }
    Component {
        file: "QMLManager.h"
        name: "QMLManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ARClothTryOn/QMLManager 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "scanProgress"
            type: "int"
            read: "scanProgress"
            notify: "scanProgressChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "garments"
            type: "QVariantList"
            read: "garments"
            notify: "garmentsChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "isNetworkConnected"
            type: "bool"
            read: "isNetworkConnected"
            notify: "networkStatusChanged"
            index: 2
            isReadonly: true
        }
        Signal { name: "permissionGranted" }
        Signal { name: "permissionDenied" }
        Signal {
            name: "scanProgressChanged"
            Parameter { name: "progress"; type: "int" }
        }
        Signal { name: "scanCompleted" }
        Signal {
            name: "scanFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Signal {
            name: "scanProcessingFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Signal { name: "garmentsChanged" }
        Signal {
            name: "garmentLoadFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Signal {
            name: "processedModelUrlReady"
            Parameter { name: "modelUrl"; type: "QString" }
            Parameter { name: "previewUrl"; type: "QString" }
            Parameter { name: "modelKey"; type: "QString" }
            Parameter { name: "previewKey"; type: "QString" }
        }
        Signal { name: "arSessionReady" }
        Signal {
            name: "arSessionFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Signal {
            name: "showPreview"
            Parameter { name: "previewPath"; type: "QString" }
        }
        Signal {
            name: "networkStatusChanged"
            Parameter { name: "connected"; type: "bool" }
        }
        Signal {
            name: "uploadProgressChanged"
            Parameter { name: "progress"; type: "int" }
        }
        Signal {
            name: "uploadCompleted"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Signal {
            name: "uploadFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Method {
            name: "handlePermissionResult"
            Parameter { name: "permission"; type: "QPermission" }
        }
        Method {
            name: "handleFrame"
            Parameter { name: "frame"; type: "QImage" }
        }
        Method {
            name: "updateScanProgress"
            Parameter { name: "progress"; type: "int" }
        }
        Method {
            name: "handleGarmentsReceived"
            Parameter { name: "garments"; type: "QJsonArray" }
        }
        Method {
            name: "handleNetworkStatusChanged"
            Parameter { name: "connected"; type: "bool" }
        }
        Method {
            name: "handleUploadProgress"
            Parameter { name: "progress"; type: "int" }
        }
        Method { name: "initializeApp" }
        Method { name: "startScanning" }
        Method { name: "saveScan" }
        Method {
            name: "tryOnGarment"
            Parameter { name: "garmentId"; type: "QString" }
        }
        Method { name: "requestCameraPermission" }
        Method { name: "hasCameraPermission"; type: "bool"; isMethodConstant: true }
        Method {
            name: "fetchGarments"
            Parameter { name: "forceRefresh"; type: "bool" }
        }
        Method { name: "fetchGarments"; isCloned: true }
        Method {
            name: "handleCapturedFrame"
            Parameter { name: "frame"; type: "QImage" }
            Parameter { name: "garmentId"; type: "QString" }
        }
        Method {
            name: "setScanCategory"
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "saveGarment"
            Parameter { name: "garmentId"; type: "QString" }
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "modelUrl"; type: "QString" }
            Parameter { name: "previewUrl"; type: "QString" }
            Parameter { name: "modelKey"; type: "QString" }
            Parameter { name: "previewKey"; type: "QString" }
            Parameter { name: "category"; type: "QString" }
        }
    }
}
